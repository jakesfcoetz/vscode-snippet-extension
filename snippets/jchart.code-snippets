{
  //=================================================================
  "jchart Bar": {
    "prefix": "jchart",
    "body": [
      "//=================================================================",
      "//========== Bar ==================================================",
      "//=================================================================",
      "//--- Add to HTML",
      "<ion-card class=\"card-shadow\">",
      "  <ion-card-header>",
      "  </ion-card-header>",
      "  <ion-card-content>",
      "    <div echarts [options]=\"chartOptions\" [merge]=\"chartMergeOptions\" [loading]=\"chartLoading\" style=\"height: 400px;\"></div>",
      "  </ion-card-content>",
      "  <ion-footer class=\"card-footer ion-no-border\" >",
      "  </ion-footer>",
      "</ion-card>",
      "",
      "//--- Add to CSS",
      ".card-shadow {",
      "  background-color: var(--ion-color-light);",
      "  box-shadow: 1px 1px 5px var(--ion-color-light-shadow);",
      "  height: 95%;",
      "  padding-bottom: 35px;",
      "}",
      "",
      ".card-footer {",
      "  position: absolute;",
      "  bottom: 0;",
      "  text-align: center;",
      "  padding-bottom: 10px;",
      "}",
      "",
      "//--- Add to ts",
      "import { chart } from '@models/chart.model';",
      "chartOptions = chart.{$chart_type }.{$type_variant}; //--- Defines the display options for the chart",
      "chartMergeOptions: any; //--- Object used to dynamically update chart options",
      "chartLoading = false; //--- display loading graphic on chart",
      "",
      "//--- Add specific settings to series options",
      "private seriesSpecificOptions = {",
      "  type: 'bar',",
      "  barGap: '10%',",
      "  label: {",
      "    show: true,",
      "    position: 'inside',",
      "    fontSize: 20,",
      "    color: 'rgba(15, 73, 115, 0.85)',",
      "  },",
      "  emphasis: {",
      "    focus: 'series',",
      "  },",
      "};",
      "",
      "//--- Update method",
      "updateChart() {",
      "  this.chartLoading = true;",
      "  // --- add get data method here",
      "  let legendArray = ['Bar1', 'Bar2']",
      "  this.chartMergeOptions = {",
      "    dataset: {",
      "      dimensions: ['unused', ...legendArray[] ],",
      "      source: [['label1',13,56], ['label2',42,35], ... ],",
      "    },",
      "    color: [ //--- Array of colors to use",
      "      'rgba(0,255,0,0.5)',",
      "      'rgba(255,255,0,0.5)',",
      "    ],",
      "    series: Array(legendArray.length).fill(this.seriesSpecificOptions),",
      "  };",
      "  this.chartLoading = false;",
      "}",
      "// ================================================================",
      "// ================================================================"
    ],
    "description": "jchart Bar"
  },
  //=================================================================
  "jchart Line": {
    "prefix": "jchart",
    "body": [
      "// ================================================================",
      "// ========== Line ================================================",
      "// ================================================================",
      "//--- Add to HTML",
      "<ion-card class=\"card-shadow\">",
      "  <ion-card-header>",
      "  </ion-card-header>",
      "  <ion-card-content>",
      "    <div echarts [options]=\"chartOptions\" [merge]=\"chartMergeOptions\" [loading]=\"chartLoading\" style=\"height: 400px;\"></div>",
      "  </ion-card-content>",
      "  <ion-footer class=\"card-footer ion-no-border\" >",
      "  </ion-footer>",
      "</ion-card>",
      "",
      "//--- Add to CSS",
      ".card-shadow {",
      "  background-color: var(--ion-color-light);",
      "  box-shadow: 1px 1px 5px var(--ion-color-light-shadow);",
      "  height: 95%;",
      "  padding-bottom: 35px;",
      "}",
      "",
      ".card-footer {",
      "  position: absolute;",
      "  bottom: 0;",
      "  text-align: center;",
      "  padding-bottom: 10px;",
      "}",
      "",
      "//--- Add to ts",
      "import { chart } from '@models/chart.model';",
      "chartOptions = chart.{$chart_type }.{$type_variant}; //--- Defines the display options for the chart",
      "chartMergeOptions: any; //--- Object used to dynamically update chart options",
      "chartLoading = false; //--- display loading graphic on chart",
      "",
      "//--- Add specific settings to series options",
      "private seriesSpecificOptions_Line = {",
      "  type: 'line',",
      "  areaStyle: {},",
      "  smooth: 0.5,",
      "};",
      "",
      "//--- Update method",
      "updateChart() {",
      "  this.chartLoading = true;",
      "  // --- add get data method here",
      "  let legendArray = ['Line1', 'Line2']",
      "  this.chartMergeOptions = {",
      "    dataset: {",
      "      dimensions: ['unused', ...legendArray[] ],",
      "      source: [['label1',13,56], ['label2',42,35], ... ],",
      "    },",
      "    color: [ //--- Array of colors to use",
      "      'rgba(0,255,0,0.5)',",
      "      'rgba(255,255,0,0.5)',",
      "    ],",
      "    series: Array(legendArray.length).fill(this.seriesSpecificOptions),",
      "  };",
      "  this.chartLoading = false;",
      "}",
      "// ================================================================",
      "// ================================================================"
    ],
    "description": "jchart Line"
  },
  //=================================================================
  "jchart Pie": {
    "prefix": "jchart",
    "body": [
      "// ================================================================",
      "// ========== Pie =================================================",
      "// ================================================================",
      "//--- Add to HTML",
      "<ion-card class=\"card-shadow\">",
      "  <ion-card-header>",
      "  </ion-card-header>",
      "  <ion-card-content>",
      "    <div echarts [options]=\"chartOptions\" [merge]=\"chartMergeOptions\" [loading]=\"chartLoading\" style=\"height: 400px;\"></div>",
      "  </ion-card-content>",
      "  <ion-footer class=\"card-footer ion-no-border\" >",
      "  </ion-footer>",
      "</ion-card>",
      "",
      "//--- Add to CSS",
      ".card-shadow {",
      "  background-color: var(--ion-color-light);",
      "  box-shadow: 1px 1px 5px var(--ion-color-light-shadow);",
      "  height: 95%;",
      "  padding-bottom: 35px;",
      "}",
      "",
      ".card-footer {",
      "  position: absolute;",
      "  bottom: 0;",
      "  text-align: center;",
      "  padding-bottom: 10px;",
      "}",
      "",
      "//--- Add to ts",
      "import { chart } from '@models/chart.model';",
      "chartOptions = chart.{$chart_type }.{$type_variant}; //--- Defines the display options for the chart",
      "chartMergeOptions: any; //--- Object used to dynamically update chart options",
      "chartLoading = false; //--- display loading graphic on chart",
      "",
      "//--- Update method",
      "updateChart() {",
      "  this.chartLoading = true;",
      "  // --- add get data method here",
      "  this.chartMergeOptions = {",
      "    dataset: {",
      "      source: {",
      "        label: ['newLabel1', 'newLabel2', 'newLabel3', ... ],",
      "        data: [val1, val2, val3, ...],",
      "      },",
      "    },",
      "    color: ['color1', 'color2', 'color3', ... ],",
      "  };",
      "  this.chartLoading = false;",
      "}",
      "// ================================================================",
      "// ================================================================"
    ],
    "description": "jchart Pie"
  }
  //=================================================================
}
